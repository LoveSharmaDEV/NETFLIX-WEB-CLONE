{"version":3,"sources":["axios.js","Row.js","requests.js","Banner.js","Nav.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","request","console","log","data","results","fetchData","className","map","movie","onClick","movieTrailer","name","original_name","then","url","urlParams","URLSearchParams","URL","search","catch","error","handleClick","src","poster_path","backdrop_path","alt","id","videoId","opts","height","width","playerVars","autoplay","APIKEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","str","n","setMovie","Math","floor","random","length","style","backgroundSize","backgroundImage","overview","substr","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a8450553.chunk.js","sourcesContent":["import axios from \"axios\"\n\nconst instance = axios.create({\n    baseURL: \"https://api.themoviedb.org/3\",\n});\n\nexport default instance;","import React, { useState, useEffect } from 'react';\nimport axios from './axios';\nimport \"./Row.css\"\nimport Youtube from 'react-youtube'\nimport movieTrailer from 'movie-trailer'\nconst base_url = \"https://image.tmdb.org/t/p/original/\"\n\nfunction Row({ title, fetchUrl, isLargeRow }) {\n    const [movies, setMovies] = useState([]);\n    const [trailerUrl, setTrailerUrl] = useState(\"\")\n\n    useEffect(()=> {\n        // If [], run once when the compnents loads and dont runs again\n        async function fetchData()\n        {\n            const request = await axios.get(fetchUrl);\n            console.log(request);\n            setMovies(request.data.results);\n            return request;\n        }\n        fetchData();\n    }, [fetchUrl]);\n\n    const opts = {\n\n        height: \"390\",\n        width: \"100%\",\n        playerVars:{\n            autoplay: 1,\n        },\n    };\n\n    const handleClick = (movie) => {\n        if(trailerUrl) {\n            setTrailerUrl('');\n        }\n        else {\n            movieTrailer(movie?.title || movie?.name || movie?.original_name || \"\")\n            .then(url => {\n                const urlParams = new URLSearchParams(new URL(url).search);\n                setTrailerUrl(urlParams.get('v'));\n\n            }).catch(error => console.log(error))\n        }\n    }\n\n    return (\n        <div>\n             \n             <div className='row'>\n             <h2> {title} </h2>\n                <div className=\"row__posters\" >\n\n                     {movies.map(movie => (\n                         <img \n                         key={movie.id}\n                         onClick = {() => handleClick(movie)}\n                         className={`row__poster ${isLargeRow && \"row__posterLarge\"}`}\n                          src={`${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path }`} \n                          alt={movie.name}/>\n                     ))}\n                </div>\n             </div>   \n                     { trailerUrl && <Youtube videoId={trailerUrl} opts={opts} />}    \n        </div>\n    )\n}\n\nexport default Row;\n","const APIKEY = \"bf7811d4f82f644529770443a0b2ca44\";\n\n// Initalizing End points\n\n// Create Request Objects\nconst requests = {\n    fetchTrending: `trending/all/week?api_key=${APIKEY}&language=en-US`,\n    fetchNetflixOriginals: `discover/tv?api_key=${APIKEY}&with_networks=213`,\n    fetchTopRated:  `movie/top_rated?api_key=${APIKEY}&language=en-US`,\n    fetchActionMovies: `discover/movie?api_key=${APIKEY}&with_genres=28`,\n    fetchComedyMovies: `discover/movie?api_key=${APIKEY}&with_genres=35`,\n    fetchHorrorMovies:  `discover/movie?api_key=${APIKEY}&with_genres=27`,\n    fetchRomanceMovies: `discover/movie?api_key=${APIKEY}&with_genres=10749`,\n    fetchDocumentaries: `discover/movie?api_key=${APIKEY}&with_genres=99`,\n}\n\n\nexport default requests;\n","import React, {useState, useEffect} from 'react'\nimport axios from './axios'\nimport requests from './requests'\nimport \"./Banner.css\"\n\nfunction Banner() {\n    const [movie, setMovie] = useState([])\n\n    useEffect(() => {\n        async function fetchData()\n        {\n            const request = await axios.get(requests.fetchNetflixOriginals);\n            setMovie(request.data.results[Math.floor(Math.random() * request.data.results.length - 1)]);\n        }\n        fetchData();\n    }, [])\n\n    function truncate(str, n) {\n        return str?.length > n ? str.substr(0, n-1) + \"...\" : str;\n    }\n\n    return (\n        <header className=\"banner\"\n        style = {{\n            backgroundSize: \"cover\",\n            backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`\n        }}\n        >\n            {/*BACKGROUND IMAGE */}\n            <div className=\"banner__contents\">\n                <h1 className=\"banner__title\">\n                    {movie?.title || movie?.name || movie?.original_name}\n                </h1>\n\n                <div className=\"banner_buttons\">\n                    <button className=\"banner__button\">\n                        PLAY\n                    </button>\n\n                    <button className=\"banner__button\">\n                        MY LIST\n                    </button>\n                </div>\n\n                <h1 className=\"banner__description\">\n                    {truncate(movie?.overview, 150)}\n                </h1>\n            </div>\n\n            <div className=\"banner--fadeBottom\">\n\n            </div>\n           \n        </header>\n    )\n}\n\nexport default Banner\n","import React, { useEffect, useState } from 'react'\nimport './Nav.css'\n\nfunction Nav() {\n\n    const [show, handleShow] = useState(false)\n\n    useEffect(() => {\n        window.addEventListener(\"scroll\", () => {\n            if(window.scrollY > 100)\n            {\n                handleShow(true);\n            }else handleShow(false)\n        });\n        return () => {\n            window.removeEventListener(\"scroll\")\n        }\n\n    }, [])\n    return (\n        <div className={`nav ${show && \"nav__black\"}`}>\n\n            <img \n            className=\"nav__logo\"\n            src=\"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\"\n            alt=\"Netflix Logo\"\n            />    \n            \n        </div>\n    )\n}\n\nexport default Nav\n\n","import React from 'react'\nimport './App.css';\nimport Row from \"./Row\"\nimport requests from './requests'\nimport Banner from \"./Banner\"\nimport Nav from \"./Nav\"\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Nav />      \n      <Banner />\n      <Row title=\"NETFLIX ORIGINALS\" \n      fetchUrl= {requests.fetchNetflixOriginals}\n      isLargeRow={true} />\n       \n      <Row title=\"TRENDING NOW\" fetchUrl= {requests.fetchTrending} />\n      <Row title=\"TOP RATED\" fetchUrl= {requests.fetchTopRated} />\n      <Row title=\"ACTION MOVIES\" fetchUrl= {requests.fetchActionMovies} />\n      <Row title=\"COMEDY MOVIES\" fetchUrl= {requests.fetchComedyMovies} />\n      <Row title=\"HORROR MOVIES\" fetchUrl= {requests.fetchHorrorMovies} />\n      <Row title=\"ROMANCE MOVIES\" fetchUrl= {requests.fetchRomanceMovies} />\n      <Row title=\"DOCUMENTARIES\" fetchUrl= {requests.fetchDocumentaries} />\n    \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}